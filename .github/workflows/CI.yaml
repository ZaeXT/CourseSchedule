name: Build Project

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    
    # 安装 vcpkg
    - name: Setup vcpkg
      run: |
        git clone https://github.com/microsoft/vcpkg.git
        cd vcpkg; .\bootstrap-vcpkg.bat
        .\vcpkg.exe integrate install

    # 安装 Qt
    - name: Setup Qt6
      uses: jurplel/install-qt-action@v4.1.1
      with:
        host: windows
        version: 6.8.0
        setup-python: false

    # 安装 Visual Studio (如果 GitHub Actions 上的 Windows 环境没有预装)
    - name: Setup MSBuild and Visual Studio
      uses: microsoft/setup-msbuild@v2

    # 安装 vcpkg 依赖
    - name: Install dependencies from vcpkg.json
      run: |
        .\vcpkg\vcpkg install

    # 安装 QtMsBuild
    - name: Install QtMsBuild
      shell: pwsh
      run: |
        Invoke-WebRequest -Uri "https://download.qt.io/development_releases/vsaddin/3.3.1/qt-vsaddin-msbuild-3.3.1.zip" -OutFile "msbuild.zip"
        Expand-Archive -Path "msbuild.zip" -DestinationPath "QtMsBuild"
        

    # 设置 MSBuild 环境变量
    - name: Setup environment variables
      run: |
        echo "VCPKG_ROOT=$(pwd)/vcpkg/vcpkg" >> $GITHUB_ENV
        echo "PATH=$(pwd)/vcpkg/vcpkg:$PATH" >> $GITHUB_ENV
        echo "CXXFLAGS=-I$(pwd)/vcpkg/vcpkg/installed/x64-windows/include" >> $GITHUB_ENV
        echo "LIBS=-L$(pwd)/vcpkg/vcpkg/installed/x64-windows/lib" >> $GITHUB_ENV
        echo "QTDIR=$QT_ROOT_DIR" >> "$GITHUB_ENV"
        echo "QtToolsPath=$QT_ROOT_DIR/bin" >> "$GITHUB_ENV"

    # 使用 MSBuild 构建项目
    - name: Build project using MSBuild
      run: |
        msbuild "Schedule.sln" /p:Configuration=Release /p:Platform=x64
